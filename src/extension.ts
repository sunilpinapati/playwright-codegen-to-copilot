import * as vscode from 'vscode';
import { spawn } from 'child_process';
import { Buffer } from 'buffer';

export function activate(context: vscode.ExtensionContext) {
  let disposable = vscode.commands.registerCommand('playwright.codegenToCopilot', async () => {
    const url = await vscode.window.showInputBox({ prompt: "Enter the URL to record with Playwright" });
    if (!url) { return; }

    // Spawn Playwright Codegen in TypeScript mode
    const command = process.platform === "win32" ? "npx.cmd" : "npx";
    const args = ['playwright', 'codegen', url, '--target=typescript'];

    let codeOutput = '';
    let errorOutput = '';

    const processSpawned = spawn(command, args);

    vscode.window.showInformationMessage('Recording with Playwright Codegen. Complete your interactions and then close the browser window to finish.');

    processSpawned.stdout.on('data', (data: Buffer) => { codeOutput += data.toString(); });
    processSpawned.stderr.on('data', (data: Buffer) => { errorOutput += data.toString(); });

    processSpawned.on('close', async (code: number) => {
      if (code !== 0) {
        vscode.window.showErrorMessage(`Playwright codegen exited with code ${code}: ${errorOutput}`);
        return;
      }
      if (!codeOutput.trim()) {
        vscode.window.showWarningMessage('No code was generated by Playwright Codegen.');
        return;
      }

      // Open a new editor tab with the generated TypeScript code
      const doc = await vscode.workspace.openTextDocument({ content: codeOutput, language: 'typescript' });
      await vscode.window.showTextDocument(doc);

      // Optionally, auto-fill Copilot Chat (requires Copilot Chat extension)
      const copilotPrompt = `Here is Playwright TypeScript test code. Please refactor it for best practices and add comments:\n\n\`\`\`typescript\n${codeOutput}\n\`\`\``;

      // Open Copilot Chat and send the prompt (requires GitHub Copilot Chat)
      try {
        await vscode.commands.executeCommand('github.copilot-chat.open');
        await vscode.commands.executeCommand('github.copilot-chat.ask', copilotPrompt);
      } catch (e) {
        vscode.window.showWarningMessage('Could not open Copilot Chat or send prompt. Make sure the GitHub Copilot Chat extension is installed.');
      }
    });
  });

  context.subscriptions.push(disposable);
}

export function deactivate() {}
